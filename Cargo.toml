[package]
name = "ripgrep"
version = "14.1.1"  #:version
authors = ["Andrew Gallant <jamslam@gmail.com>"]
description = """
ripgrep is a line-oriented search tool that recursively searches the current
directory for a regex pattern while respecting gitignore rules. ripgrep has
first class support on Windows, macOS and Linux.
"""
documentation = "https://github.com/BurntSushi/ripgrep"
homepage = "https://github.com/BurntSushi/ripgrep"
repository = "https://github.com/BurntSushi/ripgrep"
keywords = ["regex", "grep", "egrep", "search", "pattern"]
categories = ["command-line-utilities", "text-processing"]
license = "Unlicense OR MIT"
exclude = [
  "HomebrewFormula",
  "/.github/",
  "/ci/",
  "/pkg/brew",
  "/benchsuite/",
  "/scripts/",
]
build = "build.rs"
autotests = false
edition = "2021"
rust-version = "1.72"

[[bin]]
bench = false
path = "crates/core/main.rs"
name = "rg"

[[test]]
name = "integration"
path = "tests/tests.rs"

[workspace]
members = [
  "crates/globset",
  "crates/grep",
  "crates/cli",
  "crates/matcher",
  "crates/pcre2",
  "crates/printer",
  "crates/regex",
  "crates/searcher",
  "crates/ignore",
]

[workspace.dependencies]
aho-corasick = "1.1.1"
anyhow = "1.0.75"
bstr = { version = "1.7.0", default-features = false }
crossbeam-channel = "0.5.8"
crossbeam-deque = "0.8.3"
encoding_rs = "0.8.33"
encoding_rs_io = "0.1.7"
glob = "0.3.1"
globset = { version = "0.4.15", path = "crates/globset" }
grep = { version = "0.3.2", path = "crates/grep" }
grep-cli = { version = "0.1.11", path = "crates/cli" }
grep-matcher = { version = "0.1.7", path = "crates/matcher" }
grep-pcre2 = { version = "0.1.8", path = "crates/pcre2" }
grep-printer = { version = "0.2.2", path = "crates/printer" }
grep-regex = { version = "0.1.13", path = "crates/regex" }
grep-searcher = { version = "0.1.14", path = "crates/searcher" }
ignore = { version = "0.4.23", path = "crates/ignore" }
lexopt = "0.3.0"
log = "0.4.20"
memchr = "2.6.3"
memmap = "0.9.0"
pcre2 = "0.2.6"
regex = "1.9.5"
regex-automata = { version = "0.4.0", default-features = false }
regex-syntax = { version = "0.8.0", default-features = false }
same-file = "1.0.6"
serde = "1.0.193"
serde_derive = "1.0.77"
serde_json = "1.0.107"
termcolor = "1.3.0"
textwrap = { version = "0.16.0", default-features = false }
walkdir = "2.4.0"

[dependencies]
anyhow = { workspace = true }
bstr = { workspace = true }
grep = { workspace = true }
ignore = { workspace = true }
lexopt = { workspace = true }
log = { workspace = true }
serde_json = { workspace = true }
termcolor = { workspace = true }
textwrap = { workspace = true }

[target.'cfg(all(target_env = "musl", target_pointer_width = "64"))'.dependencies.jemallocator]
version = "0.5.0"

[dev-dependencies]
serde = { workspace = true }
serde_derive = { workspace = true }
walkdir = { workspace = true }

[features]
pcre2 = ["grep/pcre2"]

[profile.release]
debug = 1

[profile.release-lto]
inherits = "release"
opt-level = 3
debug = "none"
strip = "symbols"
debug-assertions = false
overflow-checks = false
lto = "fat"
panic = "abort"
incremental = false
codegen-units = 1

# This is the main way to strip binaries in the deb package created by
# 'cargo deb'. For other release binaries, we (currently) call 'strip'
# explicitly in the release process.
[profile.deb]
inherits = "release"
debug = false

[package.metadata.deb]
features = ["pcre2"]
section = "utils"
assets = [
  ["target/release/rg", "usr/bin/", "755"],
  ["COPYING", "usr/share/doc/ripgrep/", "644"],
  ["LICENSE-MIT", "usr/share/doc/ripgrep/", "644"],
  ["UNLICENSE", "usr/share/doc/ripgrep/", "644"],
  ["CHANGELOG.md", "usr/share/doc/ripgrep/CHANGELOG", "644"],
  ["README.md", "usr/share/doc/ripgrep/README", "644"],
  ["FAQ.md", "usr/share/doc/ripgrep/FAQ", "644"],
  # The man page is automatically generated by ripgrep's build process, so
  # this file isn't actually committed. Instead, to create a dpkg, either
  # create a deployment/deb directory and copy the man page to it, or use the
  # 'ci/build-deb' script.
  ["deployment/deb/rg.1", "usr/share/man/man1/rg.1", "644"],
  # Similarly for shell completions.
  ["deployment/deb/rg.bash", "usr/share/bash-completion/completions/rg", "644"],
  ["deployment/deb/rg.fish", "usr/share/fish/vendor_completions.d/rg.fish", "644"],
  ["deployment/deb/_rg", "usr/share/zsh/vendor-completions/", "644"],
]
extended-description = """\
ripgrep (rg) recursively searches your current directory for a regex pattern.
By default, ripgrep will respect your .gitignore and automatically skip hidden
files/directories and binary files.
"""
